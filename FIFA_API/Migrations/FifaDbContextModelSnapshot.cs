// <auto-generated />
using System;
using System.Collections.Generic;
using FIFA_API.Models.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FIFA_API.Migrations
{
    [DbContext(typeof(FifaDbContext))]
    partial class FifaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "code_status_commande", new[] { "preparation", "validation", "expedition", "livre", "annule", "refuse", "refus_accepte" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "pied_joueur", new[] { "gaucher", "droitier", "ambidextre" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "poste_joueur", new[] { "attaquant", "defenseur", "gardien" });
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Adresse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("adr_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CodePostal")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character(5)")
                        .HasColumnName("adr_codepostal")
                        .IsFixedLength();

                    b.Property<string>("Rue")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("adr_rue");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("adr_ville");

                    b.HasKey("Id");

                    b.ToTable("t_e_adresse_adr");

                    b.HasCheckConstraint("ck_adr_codepostal", "adr_codepostal ~ '^([0-9]{2}|2[AB])[0-9]{3}$'");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.CategorieProduit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("cpr_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdCategorieProduitParent")
                        .HasColumnType("integer")
                        .HasColumnName("cpr_idparent");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("cpr_nom");

                    b.HasKey("Id");

                    b.HasIndex("IdCategorieProduitParent")
                        .HasDatabaseName("IX_categorieproduit_cpr_idparent");

                    b.HasIndex("Nom")
                        .IsUnique()
                        .HasDatabaseName("IX_categorieproduit_cpr_nom");

                    b.ToTable("t_e_categorieproduit_cpr");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Club", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("clb_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("clb_nom");

                    b.HasKey("Id");

                    b.HasIndex("Nom")
                        .IsUnique()
                        .HasDatabaseName("IX_club_clb_nom");

                    b.ToTable("t_e_club_clb");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Commande", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("cmd_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCommande")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("cmd_datecommande")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime?>("DateExpedition")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("cmd_dateexpedition");

                    b.Property<DateTime?>("DateLivraison")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("cmd_datelivraison");

                    b.Property<int>("IdAdresseFacturation")
                        .HasColumnType("integer")
                        .HasColumnName("adr_facuration_id");

                    b.Property<int>("IdAdresseLivraison")
                        .HasColumnType("integer")
                        .HasColumnName("adr_livraison_id");

                    b.Property<int>("IdTypeLivraison")
                        .HasColumnType("integer")
                        .HasColumnName("tli_id");

                    b.Property<int>("IdUtilisateur")
                        .HasColumnType("integer")
                        .HasColumnName("utl_id");

                    b.Property<decimal>("PrixLivraison")
                        .HasPrecision(7, 2)
                        .HasColumnType("numeric(7,2)")
                        .HasColumnName("cmd_prixlivraison");

                    b.Property<string>("UrlFacture")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cmd_urlfacture");

                    b.HasKey("Id");

                    b.HasIndex("IdAdresseFacturation")
                        .HasDatabaseName("IX_commande_adr_facuration_id");

                    b.HasIndex("IdAdresseLivraison")
                        .HasDatabaseName("IX_commande_adr_livraison_id");

                    b.HasIndex("IdTypeLivraison")
                        .HasDatabaseName("IX_commande_tli_id");

                    b.HasIndex("IdUtilisateur")
                        .HasDatabaseName("IX_commande_utl_id");

                    b.HasIndex("UrlFacture")
                        .IsUnique()
                        .HasDatabaseName("IX_commande_cmd_urlfacture");

                    b.ToTable("t_e_commande_cmd");

                    b.HasCheckConstraint("ck_cmd_prixlivraison", "cmd_prixlivraison > 0");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Competition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("cmp_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("cmp_nom");

                    b.HasKey("Id");

                    b.ToTable("t_e_competition_cmp");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Couleur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("col_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CodeHexa")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("character(6)")
                        .HasColumnName("col_codehexa")
                        .IsFixedLength();

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("col_nom");

                    b.HasKey("Id");

                    b.ToTable("t_e_couleur_col");

                    b.HasCheckConstraint("ck_col_codehexa", "col_codehexa ~ '^[0-9A-F]{6}$'");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.FaqJoueur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("faq_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("IdJoueur")
                        .HasColumnType("integer")
                        .HasColumnName("jou_id");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("faq_question");

                    b.Property<string>("Reponse")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("faq_reponse");

                    b.HasKey("Id");

                    b.HasIndex("IdJoueur")
                        .HasDatabaseName("IX_faqjoueur_jou_id");

                    b.ToTable("t_e_faqjoueur_faq");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("gen_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("gen_nom");

                    b.HasKey("Id");

                    b.ToTable("t_e_genre_gen");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Joueur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("jou_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Biographie")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("jou_biographie");

                    b.Property<DateTime?>("DateNaissance")
                        .HasColumnType("date")
                        .HasColumnName("jou_datenaissance");

                    b.Property<int>("IdClub")
                        .HasColumnType("integer")
                        .HasColumnName("clb_id");

                    b.Property<int>("IdPays")
                        .HasColumnType("integer")
                        .HasColumnName("pys_id");

                    b.Property<int?>("IdPhoto")
                        .HasColumnType("integer")
                        .HasColumnName("pht_id");

                    b.Property<string>("LieuNaissance")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("jou_lieunaissance");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("jou_nom");

                    b.Property<PiedJoueur>("Pied")
                        .HasColumnType("pied_joueur")
                        .HasColumnName("jou_pied");

                    b.Property<int>("Poids")
                        .HasColumnType("integer")
                        .HasColumnName("jou_poids");

                    b.Property<PosteJoueur>("Poste")
                        .HasColumnType("poste_joueur")
                        .HasColumnName("jou_poste");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("jou_prenom");

                    b.Property<int>("Taille")
                        .HasColumnType("integer")
                        .HasColumnName("jou_taille");

                    b.HasKey("Id");

                    b.HasIndex("IdClub")
                        .HasDatabaseName("IX_joueur_clb_id");

                    b.HasIndex("IdPays")
                        .HasDatabaseName("IX_joueur_pys_id");

                    b.HasIndex("IdPhoto")
                        .HasDatabaseName("IX_joueur_pht_id");

                    b.ToTable("t_e_joueur_jou");

                    b.HasCheckConstraint("ck_jou_poids", "jou_poids > 0");

                    b.HasCheckConstraint("ck_jou_taille", "jou_taille > 0");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Langue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("lan_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("lan_nom");

                    b.HasKey("Id");

                    b.ToTable("t_e_langue_lan");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.LigneCommande", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("lco_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("IdCommande")
                        .HasColumnType("integer")
                        .HasColumnName("cmd_id");

                    b.Property<int>("IdTaille")
                        .HasColumnType("integer")
                        .HasColumnName("tpr_id");

                    b.Property<int>("IdVCProduit")
                        .HasColumnType("integer")
                        .HasColumnName("prd_id");

                    b.Property<decimal>("PrixUnitaire")
                        .HasPrecision(7, 2)
                        .HasColumnType("numeric(7,2)")
                        .HasColumnName("lco_prixunitaire");

                    b.Property<int>("Quantite")
                        .HasColumnType("integer")
                        .HasColumnName("lco_quantite");

                    b.HasKey("Id");

                    b.HasIndex("IdCommande")
                        .HasDatabaseName("IX_lignecommande_cmd_id");

                    b.HasIndex("IdTaille")
                        .HasDatabaseName("IX_lignecommande_tpr_id");

                    b.HasIndex("IdVCProduit")
                        .HasDatabaseName("IX_lignecommande_prd_id");

                    b.ToTable("t_e_lignecommande_lco");

                    b.HasCheckConstraint("ck_lco_prixunitaire", "lco_prixunitaire >= 0");

                    b.HasCheckConstraint("ck_lco_quantite", "lco_quantite > 0");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Nation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("nat_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nat_nom");

                    b.HasKey("Id");

                    b.ToTable("t_e_nation_nat");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Pays", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("pys_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("pys_nom");

                    b.HasKey("Id");

                    b.ToTable("t_e_pays_pys");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("pht_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("pht_nom");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("pht_url");

                    b.HasKey("Id");

                    b.ToTable("t_e_photo_pht");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Produit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("prd_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("prd_description");

                    b.Property<int>("IdCategorieProduit")
                        .HasColumnType("integer")
                        .HasColumnName("cpr_id");

                    b.Property<int>("IdCompetition")
                        .HasColumnType("integer")
                        .HasColumnName("cmp_id");

                    b.Property<int>("IdGenre")
                        .HasColumnType("integer")
                        .HasColumnName("gen_id");

                    b.Property<int>("IdNation")
                        .HasColumnType("integer")
                        .HasColumnName("nat_id");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("prd_titre");

                    b.HasKey("Id");

                    b.HasIndex("IdCategorieProduit")
                        .HasDatabaseName("IX_produit_cpr_id");

                    b.HasIndex("IdCompetition")
                        .HasDatabaseName("IX_produit_cmp_id");

                    b.HasIndex("IdGenre")
                        .HasDatabaseName("IX_produit_gen_id");

                    b.HasIndex("IdNation")
                        .HasDatabaseName("IX_produit_nat_id");

                    b.ToTable("t_e_produit_prd");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Publication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("pub_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DatePublication")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("pub_datepublication")
                        .HasDefaultValueSql("now()");

                    b.Property<int?>("IdPhoto")
                        .HasColumnType("integer")
                        .HasColumnName("pht_id");

                    b.Property<string>("Resume")
                        .IsRequired()
                        .HasMaxLength(600)
                        .HasColumnType("character varying(600)")
                        .HasColumnName("pub_resume");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("pub_titre");

                    b.HasKey("Id");

                    b.HasIndex("IdPhoto")
                        .HasDatabaseName("IX_publication_pht_id");

                    b.ToTable("t_g_publication_pub");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Statistiques", b =>
                {
                    b.Property<int>("IdJoueur")
                        .HasColumnType("integer")
                        .HasColumnName("jou_id");

                    b.Property<int>("Buts")
                        .HasColumnType("integer")
                        .HasColumnName("stt_buts");

                    b.Property<int>("MatchsJoues")
                        .HasColumnType("integer")
                        .HasColumnName("stt_matchsjoues");

                    b.Property<int>("MinutesJouees")
                        .HasColumnType("integer")
                        .HasColumnName("stt_minutesjouees");

                    b.Property<int>("Titularisations")
                        .HasColumnType("integer")
                        .HasColumnName("stt_titularisations");

                    b.HasKey("IdJoueur");

                    b.ToTable("t_e_statistiques_stt");

                    b.HasCheckConstraint("ck_stt_buts", "stt_buts > 0");

                    b.HasCheckConstraint("ck_stt_matchsjoues", "stt_matchsjoues > 0");

                    b.HasCheckConstraint("ck_stt_minutesjouees", "stt_minutesjouees > 0");

                    b.HasCheckConstraint("ck_stt_titularisations", "stt_titularisations > 0");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.StatusCommande", b =>
                {
                    b.Property<int>("IdCommande")
                        .HasColumnType("integer")
                        .HasColumnName("cmd_id");

                    b.Property<CodeStatusCommande>("Code")
                        .HasColumnType("code_status_commande")
                        .HasColumnName("sco_code");

                    b.Property<string>("Commentaire")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("sco_commentaire");

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("sco_date")
                        .HasDefaultValueSql("now()");

                    b.HasKey("IdCommande", "Code");

                    b.ToTable("t_j_statuscommande_sco");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.StockProduit", b =>
                {
                    b.Property<int>("IdVCProduit")
                        .HasColumnType("integer")
                        .HasColumnName("vcp_id")
                        .HasColumnOrder(0);

                    b.Property<int>("IdTaille")
                        .HasColumnType("integer")
                        .HasColumnName("tpr_id")
                        .HasColumnOrder(1);

                    b.Property<int>("Stocks")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("spr_stocks");

                    b.HasKey("IdVCProduit", "IdTaille");

                    b.HasIndex("IdTaille")
                        .HasDatabaseName("IX_stockproduit_tpr_id");

                    b.ToTable("t_j_stockproduit_spr");

                    b.HasCheckConstraint("ck_spr_stocks", "spr_stocks > 0");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.TailleProduit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("tpr_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("tpr_nom");

                    b.HasKey("Id");

                    b.HasIndex("Nom")
                        .IsUnique()
                        .HasDatabaseName("IX_tailleproduit_tpr_nom");

                    b.ToTable("t_e_tailleproduit_tpr");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Trophee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("tph_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)")
                        .HasColumnName("tph_nom");

                    b.HasKey("Id");

                    b.HasIndex("Nom")
                        .IsUnique()
                        .HasDatabaseName("IX_trophee_tph_nom");

                    b.ToTable("t_e_trophee_tph");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.TypeLivraison", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("tli_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("MaxBusinessDays")
                        .HasColumnType("integer")
                        .HasColumnName("tli_maxbusinessdays");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("tli_nom");

                    b.Property<decimal>("Prix")
                        .HasPrecision(7, 2)
                        .HasColumnType("numeric(7,2)")
                        .HasColumnName("tli_prix");

                    b.HasKey("Id");

                    b.ToTable("t_e_typelivraison_tli");

                    b.HasCheckConstraint("ck_tli_prix", "tli_prix > 0");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Utilisateur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("utl_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateNaissance")
                        .HasColumnType("date")
                        .HasColumnName("utl_datenaissance");

                    b.Property<DateTime?>("DateVerificationEmail")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("utl_dateverificationemail");

                    b.Property<DateTime?>("DerniereConnexion")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("utl_derniereconnexion");

                    b.Property<bool>("DoubleAuthentification")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("utl_doubleauthentification");

                    b.Property<int>("IdLangue")
                        .HasColumnType("integer")
                        .HasColumnName("lan_id");

                    b.Property<int>("IdPays")
                        .HasColumnType("integer")
                        .HasColumnName("pys_idpays");

                    b.Property<int?>("IdPaysFavori")
                        .HasColumnType("integer")
                        .HasColumnName("utl_idpaysfavori");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("utl_mail");

                    b.Property<string>("MotDePasse")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character(60)")
                        .HasColumnName("utl_motdepasse")
                        .IsFixedLength();

                    b.Property<string>("Prenom")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("utl_prenom");

                    b.Property<string>("Role")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("utl_role");

                    b.Property<string>("StripeId")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("utl_stripeid");

                    b.Property<string>("Surnom")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("utl_surnom");

                    b.Property<string>("Telephone")
                        .HasColumnType("text")
                        .HasColumnName("utl_telephone");

                    b.HasKey("Id");

                    b.HasIndex("IdLangue")
                        .HasDatabaseName("IX_utilisateur_lan_id");

                    b.HasIndex("IdPays")
                        .HasDatabaseName("IX_utilisateur_pys_idpays");

                    b.HasIndex("IdPaysFavori")
                        .HasDatabaseName("IX_utilisateur_utl_idpaysfavori");

                    b.HasIndex("Mail")
                        .IsUnique()
                        .HasDatabaseName("IX_utilisateur_utl_mail");

                    b.ToTable("t_e_utilisateur_utl");

                    b.HasCheckConstraint("ck_utl_telephone", "utl_telephone ~ '^0[1-9][0-9]{8}$'");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.VarianteCouleurProduit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("vcp_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("IdCouleur")
                        .HasColumnType("integer")
                        .HasColumnName("col_id")
                        .HasColumnOrder(1);

                    b.Property<int>("IdProduit")
                        .HasColumnType("integer")
                        .HasColumnName("prd_id")
                        .HasColumnOrder(0);

                    b.Property<List<string>>("ImageUrls")
                        .IsRequired()
                        .HasColumnType("varchar[]")
                        .HasColumnName("vcp_images");

                    b.Property<decimal>("Prix")
                        .HasPrecision(7, 2)
                        .HasColumnType("numeric(7,2)")
                        .HasColumnName("vcp_prix");

                    b.HasKey("Id");

                    b.HasIndex("IdCouleur")
                        .HasDatabaseName("IX_variantecouleurproduit_col_id");

                    b.HasIndex("IdProduit", "IdCouleur")
                        .IsUnique()
                        .HasDatabaseName("IX_variantecouleurproduit_prd_id_col_id");

                    b.ToTable("t_j_variantecouleurproduit_vcp");

                    b.HasCheckConstraint("ck_vcp_prix", "vcp_prix > 0");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Video", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("vid_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("vid_nom");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("vid_url");

                    b.HasKey("Id");

                    b.ToTable("t_e_video_vid");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.VoteUtilisateur", b =>
                {
                    b.Property<int>("IdUtilisateur")
                        .HasColumnType("integer")
                        .HasColumnName("utl_id")
                        .HasColumnOrder(0);

                    b.Property<int>("IdCouleur")
                        .HasColumnType("integer")
                        .HasColumnName("col_id")
                        .HasColumnOrder(1);

                    b.Property<int>("IdTaille")
                        .HasColumnType("integer")
                        .HasColumnName("tpr_id")
                        .HasColumnOrder(2);

                    b.Property<int>("RankVote")
                        .HasColumnType("integer")
                        .HasColumnName("vtl_rankvote");

                    b.HasKey("IdUtilisateur", "IdCouleur", "IdTaille");

                    b.HasIndex("IdCouleur")
                        .HasDatabaseName("IX_voteutilisateur_col_id");

                    b.HasIndex("IdTaille")
                        .HasDatabaseName("IX_voteutilisateur_tpr_id");

                    b.ToTable("t_e_voteutilisateur_vtl");
                });

            modelBuilder.Entity("t_j_albumphoto_alp", b =>
                {
                    b.Property<int>("_albumsId")
                        .HasColumnType("integer")
                        .HasColumnName("pub_id");

                    b.Property<int>("PhotosId")
                        .HasColumnType("integer")
                        .HasColumnName("pht_id");

                    b.HasKey("_albumsId", "PhotosId");

                    b.HasIndex("PhotosId")
                        .HasDatabaseName("IX_albumphoto_pht_id");

                    b.ToTable("t_j_albumphoto_alp");
                });

            modelBuilder.Entity("t_j_articlephoto_arp", b =>
                {
                    b.Property<int>("_articlesId")
                        .HasColumnType("integer")
                        .HasColumnName("pub_id");

                    b.Property<int>("PhotosId")
                        .HasColumnType("integer")
                        .HasColumnName("pht_id");

                    b.HasKey("_articlesId", "PhotosId");

                    b.HasIndex("PhotosId")
                        .HasDatabaseName("IX_articlephoto_pht_id");

                    b.ToTable("t_j_articlephoto_arp");
                });

            modelBuilder.Entity("t_j_articlevideo_arv", b =>
                {
                    b.Property<int>("_articlesId")
                        .HasColumnType("integer")
                        .HasColumnName("pub_id");

                    b.Property<int>("VideosId")
                        .HasColumnType("integer")
                        .HasColumnName("vid_id");

                    b.HasKey("_articlesId", "VideosId");

                    b.HasIndex("VideosId")
                        .HasDatabaseName("IX_articlevideo_vid_id");

                    b.ToTable("t_j_articlevideo_arv");
                });

            modelBuilder.Entity("t_j_blogphoto_blp", b =>
                {
                    b.Property<int>("_blogsId")
                        .HasColumnType("integer")
                        .HasColumnName("pub_id");

                    b.Property<int>("PhotosId")
                        .HasColumnType("integer")
                        .HasColumnName("pht_id");

                    b.HasKey("_blogsId", "PhotosId");

                    b.HasIndex("PhotosId")
                        .HasDatabaseName("IX_blogphoto_pht_id");

                    b.ToTable("t_j_blogphoto_blp");
                });

            modelBuilder.Entity("t_j_joueurphoto_jop", b =>
                {
                    b.Property<int>("_joueursId")
                        .HasColumnType("integer")
                        .HasColumnName("jou_id");

                    b.Property<int>("PhotosId")
                        .HasColumnType("integer")
                        .HasColumnName("pht_id");

                    b.HasKey("_joueursId", "PhotosId");

                    b.HasIndex("PhotosId")
                        .HasDatabaseName("IX_joueurphoto_pht_id");

                    b.ToTable("t_j_joueurphoto_jop");
                });

            modelBuilder.Entity("t_j_joueurtrophee_jot", b =>
                {
                    b.Property<int>("JoueursId")
                        .HasColumnType("integer")
                        .HasColumnName("jou_id");

                    b.Property<int>("TropheesId")
                        .HasColumnType("integer")
                        .HasColumnName("tph_id");

                    b.HasKey("JoueursId", "TropheesId");

                    b.HasIndex("TropheesId")
                        .HasDatabaseName("IX_joueurtrophee_tph_id");

                    b.ToTable("t_j_joueurtrophee_jot");
                });

            modelBuilder.Entity("t_j_produitcouleur_prc", b =>
                {
                    b.Property<int>("ProduitsId")
                        .HasColumnType("integer")
                        .HasColumnName("prd_id");

                    b.Property<int>("CouleursId")
                        .HasColumnType("integer")
                        .HasColumnName("col_id");

                    b.HasKey("ProduitsId", "CouleursId");

                    b.HasIndex("CouleursId")
                        .HasDatabaseName("IX_produitcouleur_col_id");

                    b.ToTable("t_j_produitcouleur_prc");
                });

            modelBuilder.Entity("t_j_produittailleproduit_prt", b =>
                {
                    b.Property<int>("ProduitsId")
                        .HasColumnType("integer")
                        .HasColumnName("prd_id");

                    b.Property<int>("TaillesId")
                        .HasColumnType("integer")
                        .HasColumnName("tpr_id");

                    b.HasKey("ProduitsId", "TaillesId");

                    b.HasIndex("TaillesId")
                        .HasDatabaseName("IX_produittailleproduit_tpr_id");

                    b.ToTable("t_j_produittailleproduit_prt");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Album", b =>
                {
                    b.HasBaseType("FIFA_API.Models.EntityFramework.Publication");

                    b.ToTable("t_h_album_alb");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Article", b =>
                {
                    b.HasBaseType("FIFA_API.Models.EntityFramework.Publication");

                    b.Property<string>("Texte")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("art_texte");

                    b.ToTable("t_h_article_art");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Blog", b =>
                {
                    b.HasBaseType("FIFA_API.Models.EntityFramework.Publication");

                    b.Property<string>("Texte")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("blg_texte");

                    b.ToTable("t_h_blog_blg");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Document", b =>
                {
                    b.HasBaseType("FIFA_API.Models.EntityFramework.Publication");

                    b.Property<string>("UrlPdf")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("doc_urlpdf");

                    b.ToTable("t_h_document_doc");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.CategorieProduit", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.CategorieProduit", "Parent")
                        .WithMany("SousCategories")
                        .HasForeignKey("IdCategorieProduitParent")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_categorieproduit_cpr_idparent");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Commande", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Adresse", "AdresseFacturation")
                        .WithMany()
                        .HasForeignKey("IdAdresseFacturation")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_commande_adr_facuration_id");

                    b.HasOne("FIFA_API.Models.EntityFramework.Adresse", "AdresseLivraison")
                        .WithMany()
                        .HasForeignKey("IdAdresseLivraison")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_commande_adr_livraison_id");

                    b.HasOne("FIFA_API.Models.EntityFramework.TypeLivraison", "TypeLivraison")
                        .WithMany("Commandes")
                        .HasForeignKey("IdTypeLivraison")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_commande_tli_id");

                    b.HasOne("FIFA_API.Models.EntityFramework.Utilisateur", "Utilisateur")
                        .WithMany("Commandes")
                        .HasForeignKey("IdUtilisateur")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_commande_utl_id");

                    b.Navigation("AdresseFacturation");

                    b.Navigation("AdresseLivraison");

                    b.Navigation("TypeLivraison");

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.FaqJoueur", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Joueur", "Joueur")
                        .WithMany("FaqJoueurs")
                        .HasForeignKey("IdJoueur")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_faqjoueur_jou_id");

                    b.Navigation("Joueur");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Joueur", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Club", "Club")
                        .WithMany()
                        .HasForeignKey("IdClub")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_joueur_clb_id");

                    b.HasOne("FIFA_API.Models.EntityFramework.Pays", "Pays")
                        .WithMany()
                        .HasForeignKey("IdPays")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_joueur_pys_id");

                    b.HasOne("FIFA_API.Models.EntityFramework.Photo", "Photo")
                        .WithMany()
                        .HasForeignKey("IdPhoto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_joueur_pht_id");

                    b.Navigation("Club");

                    b.Navigation("Pays");

                    b.Navigation("Photo");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.LigneCommande", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Commande", "Commande")
                        .WithMany("Lignes")
                        .HasForeignKey("IdCommande")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_lignecommande_cmd_id");

                    b.HasOne("FIFA_API.Models.EntityFramework.TailleProduit", "Taille")
                        .WithMany()
                        .HasForeignKey("IdTaille")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_lignecommande_tpr_id");

                    b.HasOne("FIFA_API.Models.EntityFramework.VarianteCouleurProduit", "VCProduit")
                        .WithMany()
                        .HasForeignKey("IdVCProduit")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_lignecommande_prd_id");

                    b.Navigation("Commande");

                    b.Navigation("Taille");

                    b.Navigation("VCProduit");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Produit", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.CategorieProduit", "Categorie")
                        .WithMany("Produits")
                        .HasForeignKey("IdCategorieProduit")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_produit_cpr_id");

                    b.HasOne("FIFA_API.Models.EntityFramework.Competition", "Competition")
                        .WithMany("Produits")
                        .HasForeignKey("IdCompetition")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_produit_cmp_id");

                    b.HasOne("FIFA_API.Models.EntityFramework.Genre", "Genre")
                        .WithMany("Produits")
                        .HasForeignKey("IdGenre")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_produit_gen_id");

                    b.HasOne("FIFA_API.Models.EntityFramework.Nation", "Nation")
                        .WithMany("Produits")
                        .HasForeignKey("IdNation")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_produit_nat_id");

                    b.Navigation("Categorie");

                    b.Navigation("Competition");

                    b.Navigation("Genre");

                    b.Navigation("Nation");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Publication", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Photo", "Photo")
                        .WithMany()
                        .HasForeignKey("IdPhoto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_publication_pht_id");

                    b.Navigation("Photo");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Statistiques", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Joueur", "Joueur")
                        .WithOne("Stats")
                        .HasForeignKey("FIFA_API.Models.EntityFramework.Statistiques", "IdJoueur")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_statistiques_jou_id");

                    b.Navigation("Joueur");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.StatusCommande", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Commande", "Commande")
                        .WithMany("Status")
                        .HasForeignKey("IdCommande")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_statuscommande_cmd_id");

                    b.Navigation("Commande");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.StockProduit", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.TailleProduit", "Taille")
                        .WithMany()
                        .HasForeignKey("IdTaille")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_stockproduit_tpr_id");

                    b.HasOne("FIFA_API.Models.EntityFramework.VarianteCouleurProduit", "VCProduit")
                        .WithMany()
                        .HasForeignKey("IdVCProduit")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_stockproduit_vcp_id");

                    b.Navigation("Taille");

                    b.Navigation("VCProduit");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Utilisateur", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Langue", "Langue")
                        .WithMany("Utilisateurs")
                        .HasForeignKey("IdLangue")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_utilisateur_lan_id");

                    b.HasOne("FIFA_API.Models.EntityFramework.Pays", "Pays")
                        .WithMany("Utilisateurs")
                        .HasForeignKey("IdPays")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_utilisateur_pys_idpays");

                    b.HasOne("FIFA_API.Models.EntityFramework.Pays", "PaysFavori")
                        .WithMany()
                        .HasForeignKey("IdPaysFavori")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_utilisateur_utl_idpaysfavori");

                    b.Navigation("Langue");

                    b.Navigation("Pays");

                    b.Navigation("PaysFavori");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.VarianteCouleurProduit", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Couleur", "Couleur")
                        .WithMany()
                        .HasForeignKey("IdCouleur")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_variantecouleurproduit_col_id");

                    b.HasOne("FIFA_API.Models.EntityFramework.Produit", "Produit")
                        .WithMany()
                        .HasForeignKey("IdProduit")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_variantecouleurproduit_prd_id");

                    b.Navigation("Couleur");

                    b.Navigation("Produit");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.VoteUtilisateur", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Couleur", "Couleur")
                        .WithMany()
                        .HasForeignKey("IdCouleur")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_voteutilisateur_col_id");

                    b.HasOne("FIFA_API.Models.EntityFramework.TailleProduit", "Taille")
                        .WithMany()
                        .HasForeignKey("IdTaille")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_voteutilisateur_tpr_id");

                    b.HasOne("FIFA_API.Models.EntityFramework.Utilisateur", "Utilisateur")
                        .WithMany("Votes")
                        .HasForeignKey("IdUtilisateur")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_voteutilisateur_utl_id");

                    b.Navigation("Couleur");

                    b.Navigation("Taille");

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("t_j_albumphoto_alp", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Photo", null)
                        .WithMany()
                        .HasForeignKey("PhotosId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_albumphoto_pht_id");

                    b.HasOne("FIFA_API.Models.EntityFramework.Album", null)
                        .WithMany()
                        .HasForeignKey("_albumsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_albumphoto_pub_id");
                });

            modelBuilder.Entity("t_j_articlephoto_arp", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Photo", null)
                        .WithMany()
                        .HasForeignKey("PhotosId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_articlephoto_pht_id");

                    b.HasOne("FIFA_API.Models.EntityFramework.Article", null)
                        .WithMany()
                        .HasForeignKey("_articlesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_articlephoto_pub_id");
                });

            modelBuilder.Entity("t_j_articlevideo_arv", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Video", null)
                        .WithMany()
                        .HasForeignKey("VideosId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_articlevideo_vid_id");

                    b.HasOne("FIFA_API.Models.EntityFramework.Article", null)
                        .WithMany()
                        .HasForeignKey("_articlesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_articlevideo_pub_id");
                });

            modelBuilder.Entity("t_j_blogphoto_blp", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Photo", null)
                        .WithMany()
                        .HasForeignKey("PhotosId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_blogphoto_pht_id");

                    b.HasOne("FIFA_API.Models.EntityFramework.Blog", null)
                        .WithMany()
                        .HasForeignKey("_blogsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_blogphoto_pub_id");
                });

            modelBuilder.Entity("t_j_joueurphoto_jop", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Photo", null)
                        .WithMany()
                        .HasForeignKey("PhotosId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_joueurphoto_pht_id");

                    b.HasOne("FIFA_API.Models.EntityFramework.Joueur", null)
                        .WithMany()
                        .HasForeignKey("_joueursId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_joueurphoto_jou_id");
                });

            modelBuilder.Entity("t_j_joueurtrophee_jot", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Joueur", null)
                        .WithMany()
                        .HasForeignKey("JoueursId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_joueurtrophee_jou_id");

                    b.HasOne("FIFA_API.Models.EntityFramework.Trophee", null)
                        .WithMany()
                        .HasForeignKey("TropheesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_joueurtrophee_tph_id");
                });

            modelBuilder.Entity("t_j_produitcouleur_prc", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Couleur", null)
                        .WithMany()
                        .HasForeignKey("CouleursId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_produitcouleur_col_id");

                    b.HasOne("FIFA_API.Models.EntityFramework.Produit", null)
                        .WithMany()
                        .HasForeignKey("ProduitsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_produitcouleur_prd_id");
                });

            modelBuilder.Entity("t_j_produittailleproduit_prt", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Produit", null)
                        .WithMany()
                        .HasForeignKey("ProduitsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_produittailleproduit_prd_id");

                    b.HasOne("FIFA_API.Models.EntityFramework.TailleProduit", null)
                        .WithMany()
                        .HasForeignKey("TaillesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_produittailleproduit_tpr_id");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Album", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Publication", null)
                        .WithOne()
                        .HasForeignKey("FIFA_API.Models.EntityFramework.Album", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Article", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Publication", null)
                        .WithOne()
                        .HasForeignKey("FIFA_API.Models.EntityFramework.Article", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Blog", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Publication", null)
                        .WithOne()
                        .HasForeignKey("FIFA_API.Models.EntityFramework.Blog", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Document", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Publication", null)
                        .WithOne()
                        .HasForeignKey("FIFA_API.Models.EntityFramework.Document", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.CategorieProduit", b =>
                {
                    b.Navigation("Produits");

                    b.Navigation("SousCategories");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Commande", b =>
                {
                    b.Navigation("Lignes");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Competition", b =>
                {
                    b.Navigation("Produits");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Genre", b =>
                {
                    b.Navigation("Produits");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Joueur", b =>
                {
                    b.Navigation("FaqJoueurs");

                    b.Navigation("Stats");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Langue", b =>
                {
                    b.Navigation("Utilisateurs");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Nation", b =>
                {
                    b.Navigation("Produits");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Pays", b =>
                {
                    b.Navigation("Utilisateurs");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.TypeLivraison", b =>
                {
                    b.Navigation("Commandes");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Utilisateur", b =>
                {
                    b.Navigation("Commandes");

                    b.Navigation("Votes");
                });
#pragma warning restore 612, 618
        }
    }
}
